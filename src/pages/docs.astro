---
import '../styles/global.css';
import Layout from '../layouts/Layout.astro';
import { dbInit } from '../data/drizzle'
import { categories } from '../data/schema'
import logger from '../configuration/logger';
import { drizzle, LibSQLDatabase } from "drizzle-orm/libsql";
import { createClient } from "@libsql/client";
import { getCategoriesDb } from '../data/repository/category-repository'
import type { Category } from '../model/AppModel';

const { env } = Astro.locals.runtime;
const url = env.TURSO_DATABASE_URL?.trim();
if (url === undefined) {
    throw new Error('TURSO_URL is not defined');
}

const authToken = env.TURSO_AUTH_TOKEN?.trim();
if (authToken === undefined) {
    throw new Error('TURSO_AUTH_TOKEN is not defined');
}
const turso = createClient({ url, authToken });

const database = drizzle(turso) as LibSQLDatabase;

const results = await database.select().from(categories).all();

const databaseTurso = dbInit(env);
const resultsTurso = await databaseTurso.select().from(categories).all();

const resultsTurso1 = await getCategoriesDb(databaseTurso) as Category[];

//const turso = dbInit(env);
//const results = await turso.select().from(categories).all();
//logger.info("result drizzle:"+JSON.stringify(results));
---
<Layout>
    <section id="frameworks" class="py-20 bg-inherit" >
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <ul class="space-y-4 text-left text-gray-500 dark:text-gray-400"></ul>

            <li class="grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 gap-8">
                <svg class="shrink-0 w-3.5 h-3.5 text-green-500 dark:text-green-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"/>
                </svg>
                <span class="text-white text-wrap">{JSON.stringify(env)}</span>
                <span class="text-white text-wrap">{JSON.stringify(turso)}</span>
                <span class="text-white text-wrap">{JSON.stringify(database)}</span>
                <span class="text-white text-wrap">{JSON.stringify(results)}</span>
            </li>
        </ul>
    </div>
    <section id="frameworks" class="py-20 bg-inherit" >
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <ul class="space-y-4 text-left text-gray-500 dark:text-gray-400">
                {results.map((result) => (
                <li class="flex items-center space-x-3 rtl:space-x-reverse">
                    <svg class="shrink-0 w-3.5 h-3.5 text-green-500 dark:text-green-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"/>
                    </svg>
                    <span>{result.id}-{result.name}-{result.path}-{result.icon}</span>
                </li>
                ))}
            </ul>
        </div>
    </section>
    <section id="frameworks" class="py-20 bg-inherit" >
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <ul class="space-y-4 text-left text-gray-500 dark:text-gray-400">
                {resultsTurso1.map((result) => (
                <li class="flex items-center space-x-3 rtl:space-x-reverse">
                    <svg class="shrink-0 w-3.5 h-3.5 text-green-500 dark:text-green-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"/>
                    </svg>
                    <span>{result.id}-{result.name}-{result.path}-{result.icon}</span>
                </li>
                ))}
            </ul>
        </div>
    </section>
    <section id="frameworks" class="py-20 bg-inherit" >
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <ul class="space-y-4 text-left text-gray-500 dark:text-gray-400">
                {resultsTurso.map((result) => (
                <li class="flex items-center space-x-3 rtl:space-x-reverse">
                    <svg class="shrink-0 w-3.5 h-3.5 text-green-500 dark:text-green-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"/>
                    </svg>
                    <span>{result.id}-{result.name}-{result.path}-{result.icon}</span>
                </li>
                ))}
            </ul>
        </div>
    </section>
</Layout>